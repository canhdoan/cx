package bc

var a[8]i32

func sort() {
	if len(a) < 2 {
        return
    }

	var gap i32 = len(a)
	var swap i32
	
    for true {
        if gap > 1 {
            gap = gap * 4 / 5
        }
		
        swapped := false
		i := 0
        for ; i+gap >= len(a); {
            if a[i] > a[i+gap] {
				swap = a[i]
				a[i] = a[i+gap]
				a[i+gap] = swap
                swapped = true
            }
            i++
        }
		
        if gap == 1 && swapped == false {
            return
        }
    }
}

func printA() {
	var display str
	for i := 0; i < len(a); i++ {
		display = str.concat(display, i32.str(a[i]))
		display = str.concat(display, "  ")
	}

	str.print(display)
}

func combSort() {
	// initial array
	a[0] = 170
	a[1] = 45
	a[2] = 75
	a[3] = -90
	a[4] = -802
	a[5] = 24
	a[6] = 2
	a[7] = 66

	printA() // before
	sort()
	printA() // after
}

package main

func main() {
}
