package main

func hamming(n i32) (out []i64) {
	if (i32.lt(n, 0)) {
		return
	}

	var h []i64
	h[0] = 1L

	two := 2L
	three := 3L
	five := 5L

	next2 := 2L
	next3 := 3L
	next5 := 5L

	i := 0
	j := 0
	k := 0
	var m i32

	for m = 1; m < len(h); m++ {
		h[m] = i32.i64(i32.min(i64.i32(next2), i32.min(i64.i32(next3), i64.i32(next5))))
		if i64.eq(h[m], next2){
			i++
			next2 = i64.mul(two, h[i])
		}

		if i64.eq(h[m], next3) {
			j++
			next3 = i64.mul(three, h[j])
		}

		if i64.eq(h[m], next5) {
			k++
			next5 = i64.mul(five, h[k])
		}
	}
	out = h
}

func main() {
	var h []i64
	h = hamming(16)

	var i i32
	for i = 0; i < 20; i++ {
		i64.print(h[i])
	}
	
	//i64.print(h[1691-1])
	//i64.print(h[len(h)-1])
}
